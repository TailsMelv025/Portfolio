/* Imports */
@import url("https://fonts.googleapis.com/css2?family=Inter&family=Rubik&display=swap");

/* Variables */
:root {
  --mustard: #ffdb58;
  --cadetgrey: #91a3b0;
  --slategrey: #708090;
  --charcoal: #36454f;
  --bittersweet: #fe6f5e;
}

/* Whole Document */
* {
  margin: 0;
  padding: 0;
}
html {
  scroll-behavior: smooth;
}
body {
  font-family: "Rubik", sans-serif;
  font-size: calc(5rem / 4);
  color: white;
  background-color: var(--cadetgrey);
  overflow-x: hidden;
}

/* Conditions */
::selection {
  background-color: var(--mustard);
  color: black;
}
a:hover > img {
  filter: invert(100%);
}

/* Class */
.container {
  /* min-height: 84vh; */
  padding: 2em 8vw;
  /* padding-top: 64px; */
  scroll-margin-top: 32px;
}
.circle {
  border-radius: 100%;
  overflow: hidden;
}

/* Headings */
h1,
h2,
h3 {
  font-family: "Inter", sans-serif;
}
h2 {
  font-size: 2rem;
  /* font-weight: bold; */
  margin-bottom: 8px;
}
h3 {
  font-size: calc(3rem / 2);
  /* font-weight: normal; */
  margin-bottom: 8px;
  margin-top: 16px;
}

/* Header */
header {
  font-family: "Inter", sans-serif;
  background-color: var(--charcoal);
  padding: 2em;
  display: flex;
  align-items: center;
  gap: 1em;
  user-select: none;
}
#logo_white {
  /* float: left; */
  min-height: 84px;
  filter: invert(100%);
  order: -1;
}
hgroup h1 {
  font-size: calc(13rem / 4);
  font-weight: bold;
}
hgroup h2 {
  font-size: 2rem;
  font-weight: normal;
}
a img {
  height: 32px;
  width: auto;
}

/* Navigation */
nav {
  position: sticky;
  top: 0;
  background-color: var(--mustard);
  display: flex;
  justify-content: space-between;
  height: 48px;
  z-index: 9;
}
nav menu {
  display: flex;
  gap: 8px;
  align-items: center;
  list-style-type: none;
}
nav a {
  text-decoration: none;
  color: black;
  font-weight: bold;
  padding: 0.5em;
  /* min-height: 32px; */
  display: flex;
  align-items: center;
  /* margin-left: 8px; */
}
nav ::selection {
  background-color: var(--cadetgrey);
  color: white;
}
nav a:hover {
  background-color: var(--bittersweet);
  color: white;
}

/* About */
#about {
  background-color: var(--cadetgrey);
}
#about h2 {
  font-size: calc(13rem / 4);
}
#photo_Melvin_container {
  float: right;
  position: relative;
  max-height: 256px;
  max-width: 256px;
  display: flex;
  justify-content: center;
  align-items: center;
  margin: 0 0 16px 16px;
}
#photo_Melvin {
  display: block;
  height: auto;
  max-width: 100%;
}
#photo_Melvin_container figcaption {
  background-color: rgba(0, 0, 0, 0.4);
  color: white;
  position: absolute;
  text-align: center;
  /* white-space: nowrap; */
  height: 100%;
  width: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  top: 100%;
  transition: calc(1s / 3) ease-in;
}
#photo_Melvin_container:hover figcaption {
  transition: calc(1s / 3) ease-out;
  top: 0;
}
#photo_Melvin_container:active figcaption {
  background-color: rgba(255, 255, 0, 0.4);
}
#about h2 {
  font-weight: normal;
}
#about p {
  text-align: justify;
}
#skills ul {
  display: flex;
  /* list-style: none; */
  flex-wrap: wrap;
  overflow: hidden;
  column-gap: 32px;
}
#qualifications li {
  /* margin-bottom: 10px; */
}
.timeline {
  display: grid;
  grid-template-columns: 1fr 1em 1fr;
  /* border: solid; */
  gap: 10px;
}
.right-align {
  text-align: right;
}
.line {
  /* content: ""; */
  width: 4px;
  background-color: white;
  position: relative;
  justify-self: center;
  top: 0;
  bottom: 0;
  height: 100%;
  padding: 0;
  margin: 0;
}
.line-point {
  content: "";
  position: relative;
  justify-self: center;
  width: 16px;
  height: 16px;
  background-color: white;
  border-radius: 50%;
  border: solid;
}
.study-level {
  font-weight: 900;
}
.study-field {
  font-weight: 700;
}
.institution {
  font-weight: 500;
}
.duration {
  font-weight: 300;
  font-variant: small-caps;
}
.thinweight {
  font-weight: 100;
}

/* Contact */
#contact {
  background-color: var(--slategrey);
}
#contact form {
  display: grid;
  grid-template: auto / repeat(3, 1fr);
  gap: 8px 32px;
}
form input,
form textarea {
  font-family: "Rubik", sans-serif;
  font-size: calc(5rem / 4);
  border: none;
  border-bottom: solid 2px;
  padding: 0.2em;
  z-index: 1;
}
form input:focus + label {
  transition: 1s;
  /* color: var(--mustard); */
}
#contact div {
  display: flex;
  flex-direction: column;
}
form label {
  font-size: 1rem;
  /* font-weight: bold; */
  transform: translateY(2em);
  opacity: 0;
  animation: peer-in 1s ease 1s both;
}
@keyframes peer-in {
  0% {
    transform: translateY(2em);
    opacity: 0;
  }
  100% {
    transform: translateY(0);
    opacity: 1;
  }
}
#contact_name {
  grid-column: span 1;
}
#contact_subject {
  grid-column: span 2;
}
#contact_message {
  grid-column: span 3;
}
#contact textarea {
  resize: vertical;
  min-height: 24px;
}
#contact_submit {
  grid-column: 1 / -1;
  justify-self: center;
  width: 256px;
  background-color: var(--charcoal);
  color: white;
  border-radius: 32px;
}
#contact_submit:hover {
  background-color: var(--cadetgrey);
  color: white;
}
#contact_submit:active {
  background-color: var(--mustard);
  color: black;
}

/* Projects */
#projects {
  /* background-color: var(--slategrey); */
  background-image: linear-gradient(var(--slategrey), var(--cadetgrey));
}
#projects menu {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(256px, 1fr));
  gap: 32px;
  max-width: calc(100vw - 16vw);
  margin: auto;
  list-style: none;
  justify-items: center;
}
#projects menu li {
  height: 256px;
  width: 256px;
  border-radius: 32px;
  /* border: solid 8px var(--charcoal); */
  overflow: hidden;
  box-shadow: 4px 4px 20px rgba(0, 0, 0, 0.4);
  transition: ease-in calc(1s / 12);
}
#projects menu li:hover {
  box-shadow: 8px 8px 20px 8px rgba(255, 255, 255, 0.4);
  transition: ease-out calc(1s / 6);
  position: relative;
}
#projects menu a {
  display: flex;
  justify-content: center;
  align-items: flex-start;
  height: 100%;
  width: 100%;
}
#projects menu figure {
  position: relative;
  height: 100%;
  width: 100%;
  display: flex;
  justify-content: center;
  align-items: baseline;
}
#projects menu iframe {
  display: block;
  min-width: 100%;
  min-height: 100%;
  object-fit: cover;
  border: none;
}
#projects menu figcaption {
  color: black;
  font-size: 1rem;
  position: absolute;
  text-align: center;
  /* white-space: nowrap; */
  background-color: var(--mustard);
  height: 96px;
  width: 100%;
  display: flex;
  justify-content: center;
  align-items: flex-start;
  flex-wrap: wrap;
  padding: 1em;
  box-sizing: border-box;
  bottom: -108px;
  transition: calc(1s / 3) ease-in;
}
#projects menu a:hover figcaption {
  transition: calc(1s / 3) ease-out;
  bottom: 0;
}
#projects menu a:active figcaption {
  background-color: var(--bittersweet);
  color: white;
}

/* Footer */
footer {
  background-color: var(--bittersweet);
  z-index: 1;
  user-select: none;
}
footer menu {
  display: flex;
  justify-content: space-evenly;
  align-items: center;
  list-style-type: none;
  min-height: 52px;
}
footer a {
  padding: 1em;
  display: flex;
  align-items: center;
}
footer img {
  height: 32px;
  width: auto;
  filter: invert(100%);
}
footer a:hover img {
  filter: invert(0%);
}

/* Notes */

/* Selector
*  (all)
.class
.class1.class2 = has both class1 and class2
.class1 .class2 = has class2 descending from class1
#id
element
element.class = element with class
element1,element2 = all element1 and all element2
element1 element2 = all element2 from element1
element1>element2 = all element2 descending from element1
element1+element2 = first element2 child of element1
element1~element2 = all element2 that has been preceded by element1
[attribute]
[attribute=value]
*/

/* Units
cm = centimeters
mm = milimeters (10mm = 1cm)
in = inches (1in = 2.54cm)
px = pixels (96px = 1in)
pt = points (72pt = 1in)
pc = picas (1pc = 12pt)
em = times the font size
rem = times the font size of the root element
ex = times the x-height (rarely used)
ch = times the width of 0
% = % of parent element
vw = % of viewport width
vh = % of viewport height
vmin = % of viewport's smallest dimension (between w and h)
vmax = % of viewport's largest dimension (between w and h)
*/

/* Functions
calc(CALCULATION i.e. 100px / 2)
*/

/* margin/border/padding: 
4 values: top right bottom left
3 values: top right-left bottom
2 values: top-bottom right-left
1 value: all
*/

/* display:grid
grid-template: grid-template-rows / grid-template-columns
grid-template-rows: UNIT | % | repeat(INT, UNIT|%) | fr for fraction
grid-template-columns: UNIT | % | repeat(INT, UNIT|%) | fr for fraction
-
grid-area: grid-row-start / grid-column-start / grid-row-end / grid-column-end;
grid-row: grid-row-start / grid-row-end;
grid-row-start: INT | span INT
grid-row-end: INT | span INT
grid-column: grid-column-start / grid-column-end;
grid-column-start: INT | span INT
grid-column-end: INT | span INT
-
order: INT 
*/

/* display: flex
flex-flow: flex-direction flex-wrap
flex-direction: row* | row-reverse | column | column-reverse
flex-wrap: nowrap* | wrap | wrap-reverse
justify-content   (in flex-direction):  flex-start* | flex-end | center | space-between | space-around | space-evenly
align-items (90deg to flex-direction):  flex-start  | flex-end | center | baseline | stretch*
align-content (spacing):                flex-start  | flex-end | center | space-between | space-around | space-evenly | stretch*
-
align-self  (90deg to flex-direction):  flex-start  | flex-end | center | baseline | stretch*
order: INT 
*/
